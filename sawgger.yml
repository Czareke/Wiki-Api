openapi: 3.0.0
info:
  title: Wiki-API
  contact: {}
  version: '1.0'
servers:
- url: https://wiki-api-inoj.onrender.com/api/v1
  variables: {}
paths:
  /wiki/article:
    get:
      tags:
      - Article
      summary: GET ALL ARTICLES
      operationId: GETALLARTICLES
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    post:
      tags:
      - Article
      summary: CREATE ARTICLE
      operationId: CREATEARTICLE
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CREATEARTICLEREQUEST'
              - example:
                  title: New-qqqqqqq
                  content: Lorem Ipsum
                  author: Light
            example:
              title: New-qqqqqqq
              content: Lorem Ipsum
              author: Light
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /wiki/article/id:
    delete:
      tags:
      - Article
      summary: DELETE ARTICLE BY ID
      operationId: DELETEARTICLEBYID
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
    patch:
      tags:
      - Article
      summary: UPDATE ARTICLE BY ID
      operationId: UPDATEARTICLEBYID
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /wiki/article/wwww:
    get:
      tags:
      - Article
      summary: GET ARTICLE BY TITLE
      operationId: GETARTICLEBYTITLE
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /user/user:
    get:
      tags:
      - User
      summary: Get All Users
      operationId: GetAllUsers
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /user:
    get:
      tags:
      - User
      summary: Get One User
      operationId: GetOneUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /user/id:
    post:
      tags:
      - User
      summary: Create User
      operationId: CreateUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - User
      summary: Delete User
      operationId: DeleteUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /user/updateMe:
    patch:
      tags:
      - User
      summary: Update User
      operationId: UpdateUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateUserRequest'
              - example:
                  email: giftoga@gmail.com
            example:
              email: giftoga@gmail.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /user/signup:
    post:
      tags:
      - Authentication
      summary: SignUp
      operationId: SignUp
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SignUpRequest'
              - example:
                  firstName: fkmbhkdfm
                  lastName: ffbdkf
                  email: newuser2@gmail.com
                  password: secretss
                  confirmPassword: secretss
            example:
              firstName: fkmbhkdfm
              lastName: ffbdkf
              email: newuser2@gmail.com
              password: secretss
              confirmPassword: secretss
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /user/login:
    post:
      tags:
      - Authentication
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginRequest'
              - example:
                  email: lmigujf@gmail.com
                  password: secretss
            example:
              email: lmigujf@gmail.com
              password: secretss
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /user/forgetPassword:
    post:
      tags:
      - Authentication
      summary: Forget Passord
      operationId: ForgetPassord
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ForgetPassordRequest'
              - example:
                  email: newuser@gmail.com
            example:
              email: newuser@gmail.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /user/resetPassword/0c477e9c8a943c18dbf5d5c77a52084a0451eff7728db4533f49535242695ffd:
    patch:
      tags:
      - Authentication
      summary: Reset Password
      operationId: ResetPassword
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ResetPasswordRequest'
              - example:
                  password: kevin9999
                  confirmPassword: kevin9999
            example:
              password: kevin9999
              confirmPassword: kevin9999
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /:
    get:
      tags:
      - Authentication
      summary: update password
      operationId: updatepassword
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    CREATEARTICLEREQUEST:
      title: CREATEARTICLEREQUEST
      required:
      - title
      - content
      - author
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        author:
          type: string
      example:
        title: New-qqqqqqq
        content: Lorem Ipsum
        author: Light
    UpdateUserRequest:
      title: UpdateUserRequest
      required:
      - email
      type: object
      properties:
        email:
          type: string
      example:
        email: giftoga@gmail.com
    SignUpRequest:
      title: SignUpRequest
      required:
      - firstName
      - lastName
      - email
      - password
      - confirmPassword
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
      example:
        firstName: fkmbhkdfm
        lastName: ffbdkf
        email: newuser2@gmail.com
        password: secretss
        confirmPassword: secretss
    LoginRequest:
      title: LoginRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: lmigujf@gmail.com
        password: secretss
    ForgetPassordRequest:
      title: ForgetPassordRequest
      required:
      - email
      type: object
      properties:
        email:
          type: string
      example:
        email: newuser@gmail.com
    ResetPasswordRequest:
      title: ResetPasswordRequest
      required:
      - password
      - confirmPassword
      type: object
      properties:
        password:
          type: string
        confirmPassword:
          type: string
      example:
        password: kevin9999
        confirmPassword: kevin9999
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Article
- name: User
- name: Authentication